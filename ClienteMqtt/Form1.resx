<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAIAAAAEAAAABgAAAAkAAAALAAAADgAAABAAAAASAAAAFAAAABQAAAAUAAAAEgAAAA8AAAANAAAACwAA
        AAkAAAAHAAAABgAAAAUAAAADAAAAAwAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAABgAA
        AAoAAAAPAAAAFQAAABwAAAAkAAAALQAAADYAAAA/AAAASAAAAFAAAABXAAAAWgAAAFsAAABXAAAAUQAA
        AEoAAABCAAAAOgAAADIAAAApAAAAIgAAABwAAAAWAAAAEQAAAA0AAAAKAAAABwAAAAUAAAADAAAAAgAA
        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
        t/qyr690f39/AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtra2B56cm6HW09H809DO/dLPzv3g3dz+6ufl/uzo
        5/7t6ej+7eno/tTQz/6MiIj+SkZF/jgzM/44NDP+NzMy/j05OP45NTT9TkhJ/mJdX/53fXn+VFBQ/j49
        Ov4/Ojr+rauq/rm2tf3Fwr/8t7Syk6qqqgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw8DAVrWzsv3Sz87949/f/url
        5f7r5+f+6+fm/ujl5P6yrq3+amZl/jw4N/5FQUD9W1dX/jk1Nf43NDP+Q0A//lpWVv6JhYX9qKWj/lVQ
        UP5BOjr+UEpK/lpZVv4yLSz+Lysq/piVlP65t7X+xMK+/bi1s7K2trYOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0M3NV+He
        3v3o4+T+6eTk/ujk5f7Tz9D+kY2N/VFNTf5BPTz+OjU1/jk1NP05NDT+PTk5/lFOTv5raWn+XVpa/VVQ
        UP7Gwr/93M+1/oyHhv41Li7+MSsq/i4oJ/4qJST+JiEh/iIeHv57eHj+u7i3/cK/vP28urnMsrKyHgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAv7+/BMfFxX3g3Nv3v7y8/m9sa/5APDz+Pzs6/kE9Pf5RTUz+PDc3/kxGR/5zb3D+YV9f/lhT
        U/6PjIv9Z2Jh/j01Nf4+Njb+QDk5/jMsLP4vKin+Kycm/igjI/4kIB/+KiYm/iwoKP4hHh7+XFpZ/ru4
        t/2+u7r9xMLA37S0rzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADR0dEt2dbWyuro5/308vH93NnZ/tbU0/zu7Ovn6ebmtNvb
        2XqTj49Ar6+vEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxsbGCd/d3XHq6OeW4+HhZtzc
        3Cza2toHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA/8AAAD//AAD4AAAAAf8AAMAAAAAABwAAAAAAAAADAAAAAAAAAAEAAIAAAAAAAQAA8AAAAAAB
        AAD+AAAAAAEAAP4AAAAAAwAA8AAAAAB/AADAAAAH//8AAIAAAAP//wAAgAAAAf//AACAAAAA//8AAIAA
        AAB//wAA4AAAAD//AADwAAAAD/8AAPwAAAAH/wAA/gAAAAP/AAD/AAAAAf8AAP/AAAAA/wAA/+AAAAB/
        AAD/+AAAAD8AAP/8AAAADwAA//4AAAAHAAD//4AAAAMAAP//wAAAAQAA///wAAAAAAD///gAAAAAAP//
        /gAAAAAA////AAABAAD///+AAD8AAP///+AD/wAA////8D//AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>